{"version":3,"sources":["services/userAPI.js","components/Loading.jsx","components/Header.jsx","components/TrybeTunesIcon.jsx","pages/Login.jsx","services/searchAlbumsAPI.js","components/AlbumCard.jsx","components/SearchResults.jsx","pages/Search.jsx","services/favoriteSongsAPI.js","components/FavoriteCheckbox.jsx","components/MusicCard.jsx","services/musicsAPI.js","pages/Album.jsx","pages/Favorites.jsx","pages/Profile.jsx","pages/ProfileEdit.jsx","pages/NotFound.jsx","components/Content.jsx","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","updateUser","updatedUser","Loading","this","props","loading","className","React","Component","Header","state","userName","getUserInfo","then","name","image","setState","profilePicture","to","src","alt","TrybeTunesIcon","focusable","role","xmlns","viewBox","fill","d","Login","handleClick","handleSubmit","email","description","handleChange","target","value","buttonDisabled","length","getBase64","file","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","imageUpload","e","files","base64","htmlFor","id","type","onChange","accept","onClick","disabled","searchAlbumsAPI","artist","a","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","AlbumCard","album","SearchResults","albumsList","search","Search","onSubmit","lastestSearch","placeholder","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","FavoriteCheckbox","isFavorited","trackInfo","isFavorite","some","track","onFavoriteClick","toggle","updateFavoritesList","checked","defaultProps","MusicCard","trackName","previewUrl","artwork","favoritesPage","controls","kind","undefined","getMusics","request","requestJson","Album","title","tracks","getAlbumInfo","match","params","songs","reduce","acc","push","Favorites","getFavoriteSongsList","favoriteSongsList","Profile","ProfileEdit","profile","currentImage","required","NotFound","Content","isLogged","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed574d92.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nclass Loading extends React.Component {\n  render() {\n    const { loading } = this.props;\n    if (loading) {\n      return (\n        <span className=\"loading\">Carregando...</span>\n      );\n    }\n    return '';\n  }\n}\n\nLoading.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default Loading;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\nimport '../styles/Header.css';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      userName: '',\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  getUserInfo() {\n    getUser()\n      .then(({ name, image }) => {\n        this.setState({\n          userName: name, profilePicture: image, loading: false });\n      });\n  }\n\n  render() {\n    const { userName, profilePicture, loading } = this.state;\n    return (\n      <header data-testid=\"header-component\" className=\"header-component\">\n        <Link\n          to=\"/search\"\n          data-testid=\"link-to-search\"\n          className=\"link-to-search\"\n        >\n          Pesquisa\n        </Link>\n        <Link\n          to=\"/favorites\"\n          data-testid=\"link-to-favorites\"\n          className=\"link-to-favorites\"\n        >\n          Favoritas\n        </Link>\n        <Link\n          to=\"/profile\"\n          data-testid=\"link-to-profile\"\n          className=\"link-to-profile\"\n        >\n          Perfil\n        </Link>\n        <div data-testid=\"header-user-name\" className=\"header-user-name\">\n          { loading\n            ? <Loading loading={ loading } />\n            : (\n              <div className=\"profile-container\">\n                <img src={ profilePicture } alt=\"Foto de perfil\" />\n                <span className=\"user-name\">{userName}</span>\n              </div>\n            ) }\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass TrybeTunesIcon extends Component {\n  render() {\n    return (\n      <div className=\"TrybeTunes-logo\">\n        <i className=\"fas fa-headphones\">\n          <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"headphones\" className=\"svg-inline--fa fa-headphones fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M256 32C114.52 32 0 146.496 0 288v48a32 32 0 0 0 17.689 28.622l14.383 7.191C34.083 431.903 83.421 480 144 480h24c13.255 0 24-10.745 24-24V280c0-13.255-10.745-24-24-24h-24c-31.342 0-59.671 12.879-80 33.627V288c0-105.869 86.131-192 192-192s192 86.131 192 192v1.627C427.671 268.879 399.342 256 368 256h-24c-13.255 0-24 10.745-24 24v176c0 13.255 10.745 24 24 24h24c60.579 0 109.917-48.098 111.928-108.187l14.382-7.191A32 32 0 0 0 512 336v-48c0-141.479-114.496-256-256-256z\" /></svg>\n        </i>\n        <h1>TrybeTunes</h1>\n      </div>\n    );\n  }\n}\n\nexport default TrybeTunesIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUser } from '../services/userAPI';\nimport Loading from '../components/Loading';\nimport '../styles/Login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n      description: '',\n      image: '',\n      buttonDisabled: true,\n      loading: false,\n    };\n  }\n\n  handleClick = (handleSubmit) => {\n    const { name, email, description, image } = this.state;\n    this.setState({ loading: true });\n    createUser({ name, email, description, image }).then(() => {\n      // this.setState({ loading: false });\n      handleSubmit();\n    });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    const MIN_NAME_LENTGH = 3;\n    this.setState({\n      [name]: value,\n    });\n    if (name === 'name') {\n      this.setState({\n        buttonDisabled: value.length < MIN_NAME_LENTGH,\n      });\n    }\n  }\n\n  // Referencia: https://stackoverflow.com/questions/46040973/how-to-upload-image-using-reactjs-and-save-into-local-storage\n  getBase64 = (file) => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n    reader.readAsDataURL(file);\n  });\n\n  imageUpload = (e) => {\n    const file = e.target.files[0];\n    this.getBase64(file).then((base64) => {\n      this.setState({ image: base64 });\n    });\n  };\n\n  render() {\n    const { name, email, description, loading, buttonDisabled } = this.state;\n    const { handleSubmit } = this.props;\n    return (\n      <div data-testid=\"page-login\" className=\"page-login\">\n        {loading ? (\n          <Loading loading={ loading } />\n        ) : (\n          <form>\n            <label htmlFor=\"login-name-input\">\n              Nome:\n              <input\n                id=\"login-name-input\"\n                data-testid=\"login-name-input\"\n                name=\"name\"\n                type=\"text\"\n                value={ name }\n                onChange={ this.handleChange }\n              />\n            </label>\n            <label htmlFor=\"login-email-input\">\n              Email:\n              <input\n                id=\"login-email-input\"\n                data-testid=\"login-email-input\"\n                type=\"email\"\n                name=\"email\"\n                value={ email }\n                onChange={ this.handleChange }\n              />\n            </label>\n            <label htmlFor=\"login-description-input\" className=\"login-description-input\">\n              Descrição:\n              <textarea\n                id=\"login-description-input\"\n                data-testid=\"login-description-input\"\n                name=\"description\"\n                value={ description }\n                onChange={ this.handleChange }\n              />\n            </label>\n            <label htmlFor=\"login-image-input\">\n              Foto de Perfil:\n              <label htmlFor=\"login-image-input\" className=\"upload-image-button\">\n                Enviar Imagem\n                <input\n                  id=\"login-image-input\"\n                  className=\"login-image-input\"\n                  data-testid=\"login-image-input\"\n                  type=\"file\"\n                  name=\"image\"\n                  accept=\"image/png, image/jpeg\"\n                  onChange={ this.imageUpload }\n                />\n              </label>\n            </label>\n            <button\n              type=\"submit\"\n              data-testid=\"login-submit-button\"\n              onClick={ () => {\n                this.handleClick(handleSubmit);\n              } }\n              disabled={ buttonDisabled }\n            >\n              Entrar\n            </button>\n          </form>\n        )}\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass AlbumCard extends React.Component {\n  render() {\n    const {\n      album: { collectionId, collectionName, artistName, artworkUrl100 } } = this.props;\n    return (\n      <div data-testid=\"album-card\" className=\"album-card\">\n        <Link\n          to={ `album/${collectionId}` }\n          data-testid={ `link-to-album-${collectionId}` }\n        >\n          <img\n            src={ artworkUrl100 }\n            alt=\"Capa do álbum\"\n            className=\"album-artwork\"\n          />\n          <p className=\"album-title\">{ collectionName }</p>\n        </Link>\n        <p className=\"album-artist-name\">{ artistName }</p>\n      </div>\n    );\n  }\n}\n\nAlbumCard.propTypes = {\n  album: PropTypes.shape({\n    collectionId: PropTypes.number,\n    artistName: PropTypes.string,\n    collectionName: PropTypes.string,\n    artworkUrl100: PropTypes.string,\n  }).isRequired,\n};\n\nexport default AlbumCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport AlbumCard from './AlbumCard';\n\nclass SearchResults extends React.Component {\n  render() {\n    const { albumsList, search } = this.props;\n    if (albumsList.length === 0) {\n      return (<p>Nenhum álbum foi encontrado</p>);\n    }\n    return (\n      <div className=\"search-results\">\n        <span>\n          Resultado de álbuns de:\n          {' '}\n          { search }\n        </span>\n        <div className=\"albumList\">\n          { albumsList.map((album) => (\n            <AlbumCard key={ album.collectionId } album={ album } />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchResults.propTypes = {\n  albumsList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  search: PropTypes.string.isRequired,\n};\nexport default SearchResults;\n","import React from 'react';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport SearchResults from '../components/SearchResults';\nimport Loading from '../components/Loading';\nimport '../styles/Search.css';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      search: '',\n      lastestSearch: '',\n      buttonDisabled: true,\n      loading: false,\n      albumsList: null,\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    const MIN_QUERY_LENTGH = 2;\n    this.setState({\n      [name]: value,\n      buttonDisabled: value.length < MIN_QUERY_LENTGH,\n      albumsList: null,\n    });\n  }\n\n  onSubmit = async () => {\n    const { search } = this.state;\n    this.setState({ loading: true });\n    const results = await searchAlbumsAPI(search);\n    this.setState({\n      albumsList: results, loading: false, lastestSearch: search, search: '',\n    });\n  };\n\n  render() {\n    const { search, buttonDisabled, albumsList, loading, lastestSearch } = this.state;\n    return (\n      <div data-testid=\"page-search\" className=\"page-search\">\n        <form>\n          <div className=\"search-div\">\n            <input\n              data-testid=\"search-artist-input\"\n              className=\"search-artist-input\"\n              type=\"text\"\n              placeholder=\"Nome do Artista ou Banda\"\n              name=\"search\"\n              value={ search }\n              onChange={ this.handleChange }\n            />\n            <button\n              type=\"button\"\n              onClick={ this.onSubmit }\n              data-testid=\"search-artist-button\"\n              disabled={ buttonDisabled }\n            >\n              Procurar\n            </button>\n          </div>\n        </form>\n        <Loading loading={ loading } />\n        { albumsList\n          ? <SearchResults search={ lastestSearch } albumsList={ albumsList } />\n          : '' }\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { getFavoriteSongs, addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nclass FavoriteCheckbox extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isFavorite: false,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.isFavorited();\n  }\n\n  isFavorited = async () => {\n    const { trackInfo: { trackId } } = this.props;\n    const favoriteSongs = await getFavoriteSongs();\n    const isFavorite = favoriteSongs\n      ? favoriteSongs.some((track) => track.trackId === trackId)\n      : false;\n    this.setState({ isFavorite });\n    return isFavorite;\n  }\n\n  onFavoriteClick = async (isFavorite) => {\n    const { trackInfo } = this.props;\n    const toggle = isFavorite ? removeSong : addSong;\n    this.setState({ loading: true });\n    await toggle(trackInfo);\n    this.setState({ loading: false, isFavorite: !isFavorite });\n  }\n\n  render() {\n    const { trackInfo: { trackId }, updateFavoritesList } = this.props;\n    const { isFavorite, loading } = this.state;\n\n    return (\n      loading\n        ? <Loading loading={ loading } />\n        : (\n          <label\n            htmlFor={ `favorite-checkbox-${trackId}` }\n            data-testid={ `checkbox-music-${trackId}` }\n          >\n            Favorita\n            <input\n              type=\"checkbox\"\n              name=\"favorite\"\n              id={ `favorite-checkbox-${trackId}` }\n              checked={ isFavorite }\n              onChange={ () => {\n                this.onFavoriteClick(isFavorite);\n                if (updateFavoritesList) updateFavoritesList();\n              } }\n            />\n          </label>));\n  }\n}\n\nFavoriteCheckbox.propTypes = {\n  trackInfo: PropTypes.shape({\n    trackId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    trackName: PropTypes.string.isRequired,\n    artist: PropTypes.string.isRequired,\n    previewUrl: PropTypes.string.isRequired,\n  }).isRequired,\n  updateFavoritesList: PropTypes.func,\n};\n\nFavoriteCheckbox.defaultProps = {\n  updateFavoritesList: null,\n};\nexport default FavoriteCheckbox;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport FavoriteCheckbox from './FavoriteCheckbox';\n\nclass MusicCard extends React.Component {\n  render() {\n    const {\n      trackName,\n      artist,\n      previewUrl, trackId, updateFavoritesList, artwork, favoritesPage } = this.props;\n    return (\n      <div className=\"music-card\">\n        { favoritesPage\n          ? (\n            <img\n              src={ artwork }\n              alt=\"Capa do álbum\"\n              className=\"favorites-album-artwork\"\n            />) : '' }\n        <h4>{trackName}</h4>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n          O seu navegador não suporta o elemento\n          <code>audio</code>\n          .\n        </audio>\n        <FavoriteCheckbox\n          trackInfo={ { trackName,\n            artist,\n            previewUrl,\n            trackId,\n            artwork } }\n          updateFavoritesList={ updateFavoritesList }\n        />\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  artwork: PropTypes.string,\n  previewUrl: PropTypes.string.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  artist: PropTypes.string,\n  updateFavoritesList: PropTypes.func,\n  favoritesPage: PropTypes.bool,\n};\n\nMusicCard.defaultProps = {\n  artwork: undefined,\n  updateFavoritesList: null,\n  artist: '',\n  favoritesPage: false,\n};\nexport default MusicCard;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport '../styles/Album.css';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      title: '',\n      artist: '',\n      artwork: '',\n      tracks: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getAlbumInfo();\n  }\n\n  async getAlbumInfo() {\n    const { match: { params: { id } } } = this.props;\n\n    const results = await getMusics(id);\n    const songs = results.reduce((acc, song) => {\n      const { trackName, previewUrl, trackId, collectionName, kind } = song;\n\n      if (kind === 'song') {\n        acc.push({ trackName, collectionName, previewUrl, trackId });\n      }\n      return acc;\n    }, []);\n    const album = results[0];\n    const { collectionName, artistName, artworkUrl100 } = album;\n\n    this.setState({\n      title: collectionName,\n      artist: artistName,\n      artwork: artworkUrl100,\n      tracks: songs,\n    });\n  }\n\n  render() {\n    const { title, artist, artwork, tracks } = this.state;\n    return (\n      <div data-testid=\"page-album\" className=\"page-album\">\n        <div className=\"album-info-wrapper\">\n          <img src={ artwork } alt={ `Capa do álbum ${title}` } />\n          <div className=\"album-info\">\n            <h2 data-testid=\"album-name\">{ title }</h2>\n            <h3 data-testid=\"artist-name\">{ artist }</h3>\n          </div>\n        </div>\n        <div className=\"tracklist\">\n          { tracks.map(({ trackId, trackName, previewUrl }) => (\n            <MusicCard\n              key={ trackId }\n              artwork={ artwork }\n              trackId={ trackId }\n              artist={ artist }\n              trackName={ trackName }\n              previewUrl={ previewUrl }\n            />))}\n        </div>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({ id: PropTypes.string }),\n  }).isRequired,\n};\nexport default Album;\n","import React from 'react';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport '../styles/Favorites.css';\n\nclass Favorites extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      favoriteSongsList: [],\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getFavoriteSongsList();\n  }\n\n  getFavoriteSongsList = async () => {\n    this.setState({ loading: true });\n    const favoriteSongsList = await getFavoriteSongs();\n    this.setState({ favoriteSongsList, loading: false });\n  }\n\n  updateFavoritesList = () => {\n    this.getFavoriteSongsList();\n  }\n\n  render() {\n    const { favoriteSongsList, loading } = this.state;\n    return (\n      loading\n        ? <Loading loading={ loading } />\n        : (\n          <div data-testid=\"page-favorites\">\n            <div className=\"favorite-songs-list\">\n              { favoriteSongsList.length ? favoriteSongsList.map(\n                ({ trackName, artist, previewUrl, trackId, artwork }) => (\n                  <MusicCard\n                    key={ trackId }\n                    favoritesPage\n                    artwork={ artwork }\n                    artist={ artist }\n                    trackName={ trackName }\n                    previewUrl={ previewUrl }\n                    trackId={ trackId }\n                    updateFavoritesList={ this.updateFavoritesList }\n                  />\n                ),\n              ) : (<h2>Sua lista de favoritas está vazia.</h2>) }\n            </div>\n          </div>)\n    );\n  }\n}\n\nexport default Favorites;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport { getUser } from '../services/userAPI';\nimport '../styles/Profile.css';\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n      description: '',\n      image: '',\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  getUserInfo = async () => {\n    this.setState({ loading: true });\n    const { name, email, description, image } = await getUser();\n    this.setState({ loading: false, name, email, description, image });\n  }\n\n  render() {\n    const { name, email, description, image, loading } = this.state;\n    return (\n      loading ? (\n        <Loading loading={ loading } />\n      ) : (\n        <div data-testid=\"page-profile\">\n          <h1>Perfil</h1>\n          <img\n            data-testid=\"profile-image\"\n            className=\"profile-image\"\n            src={ image }\n            alt=\"Foto de perfil\"\n          />\n          <div data-testid=\"profile-name\" className=\"profile-name\">\n            <h3>Nome: </h3>\n            { name }\n          </div>\n          <div data-testid=\"profile-email\" className=\"profile-email\">\n            <h3>Email: </h3>\n            { email }\n          </div>\n          <div data-testid=\"profile-description\" className=\"profile-description\">\n            <h3>Descrição: </h3>\n            { description }\n          </div>\n          <Link to=\"/profile/edit\">\n            <button type=\"button\">\n              Editar perfil\n            </button>\n          </Link>\n        </div>\n      )\n    );\n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport { getUser, updateUser } from '../services/userAPI';\nimport '../styles/ProfileEdit.css';\n\nclass ProfileEdit extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n      description: '',\n      image: '',\n      currentImage: '',\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  getUserInfo = async () => {\n    const profile = await getUser();\n    const { name, email, description, image } = profile;\n    this.setState({\n      loading: false,\n      name,\n      email,\n      description,\n      image,\n      currentImage: image });\n  }\n\n  handleSubmit = async () => {\n    const { name, email, description, image } = this.state;\n    this.setState({ loading: true });\n    await updateUser({ name, email, description, image });\n    this.setState({ loading: false });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    const MIN_NAME_LENTGH = 3;\n    this.setState({\n      [name]: value,\n    });\n    if (name === 'name') {\n      this.setState({\n        buttonDisabled: value.length < MIN_NAME_LENTGH,\n      });\n    }\n  }\n\n  // Referencia: https://stackoverflow.com/questions/46040973/how-to-upload-image-using-reactjs-and-save-into-local-storage\n  getBase64 = (file) => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n    reader.readAsDataURL(file);\n  });\n\n  imageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      this.getBase64(file).then((base64) => {\n        this.setState({ image: base64 });\n      });\n    }\n  };\n\n  render() {\n    const { name,\n      email,\n      description,\n      image,\n      currentImage,\n      loading,\n      buttonDisabled } = this.state;\n    return (\n      <div data-testid=\"page-profile-edit\" className=\"page-profile-edit\">\n        <h1>Editar perfil</h1>\n        <img\n          className=\"profile-image\"\n          data-testid=\"profile-image\"\n          src={ currentImage }\n          alt=\"Foto de perfil\"\n        />\n        {loading ? (\n          <Loading loading={ loading } />\n        ) : (\n          <form>\n            <label htmlFor=\"edit-input-name\">\n              Nome:\n              <input\n                id=\"edit-input-name\"\n                data-testid=\"edit-input-name\"\n                name=\"name\"\n                type=\"text\"\n                value={ name }\n                onChange={ this.handleChange }\n                required\n              />\n            </label>\n            <label htmlFor=\"edit-input-email\">\n              Email:\n              <input\n                id=\"edit-input-email\"\n                data-testid=\"edit-input-email\"\n                type=\"email\"\n                name=\"email\"\n                value={ email }\n                onChange={ this.handleChange }\n                required\n              />\n            </label>\n            <label htmlFor=\"edit-input-description\" className=\"edit-input-description\">\n              Descrição:\n              <textarea\n                id=\"edit-input-description\"\n                data-testid=\"edit-input-description\"\n                name=\"description\"\n                value={ description }\n                onChange={ this.handleChange }\n                required\n              />\n            </label>\n            <label htmlFor=\"edit-input-image\">\n              Foto de Perfil:\n              <input\n                id=\"edit-input-image\"\n                data-testid=\"edit-input-image\"\n                type=\"text\"\n                placeholder=\"Link da imagem\"\n                name=\"image\"\n                value={ image }\n                onChange={ this.handleChange }\n                required\n              />\n              ou\n              <input\n                id=\"edit-image-input-file\"\n                data-testid=\"edit-image-input-file\"\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/png, image/jpeg\"\n                onChange={ this.imageUpload }\n              />\n            </label>\n            <Link to=\"/profile\">\n              <button\n                type=\"submit\"\n                data-testid=\"edit-button-save\"\n                className=\"edit-button-save\"\n                onClick={ this.handleSubmit }\n                disabled={ buttonDisabled }\n              >\n                Enviar\n              </button>\n            </Link>\n          </form>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","import React from 'react';\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\">\n        <h1>Página não encontrada</h1>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport TrybeTunesIcon from './TrybeTunesIcon';\nimport Login from '../pages/Login';\nimport Search from '../pages/Search';\nimport Album from '../pages/Album';\nimport Favorites from '../pages/Favorites';\nimport Profile from '../pages/Profile';\nimport ProfileEdit from '../pages/ProfileEdit';\nimport NotFound from '../pages/NotFound';\n\nexport default class Content extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLogged: localStorage.getItem('user') !== null,\n    };\n  }\n\n  render() {\n    const { isLogged } = this.state;\n    return (\n      <>\n        { isLogged\n          ? (\n            <>\n              <TrybeTunesIcon />\n              <Header />\n            </>) : <TrybeTunesIcon />}\n        <main className={ isLogged ? '' : 'login-page' }>\n          <Switch>\n            <Route exact path=\"/\">\n              { isLogged\n                ? <Redirect to=\"/search\" />\n                : <Login handleSubmit={ () => { this.setState({ isLogged: true }); } } />}\n            </Route>\n            <Route path=\"/search\" component={ Search } />\n            <Route path=\"/album/:id\" component={ Album } />\n            <Route path=\"/favorites\" component={ Favorites } />\n            <Route exact path=\"/profile\" component={ Profile } />\n            <Route path=\"/profile/edit\" component={ ProfileEdit } />\n            <Route path=\"*\" component={ NotFound } />\n          </Switch>\n        </main>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Content from './components/Content';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Content />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}